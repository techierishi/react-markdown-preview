{"version":3,"sources":["../../src/allowNode.tsx"],"names":["allowNode","node","index","parent","nodeany","type","value","replace","a","e"],"mappings":";;;;;;;AAEe,SAASA,SAAT,CAAmBC,IAAnB,EAA8BC,KAA9B,EAA6CC,MAA7C,EAA+D;AAC5E,MAAMC,OAAmC,GAAGH,IAA5C;;AACA,MAAIG,OAAO,CAACC,IAAR,KAAiB,MAArB,EAA6B;AAC3B;AACAJ,IAAAA,IAAI,CAACK,KAAL,GAAaL,IAAI,CAACK,KAAL,CAAWC,OAAX,CAAmB,iFAAnB,EAAsG,UAACC,CAAD,EAAe;AAChI,aAAOA,CAAC,CAACD,OAAF,CAAU,OAAV,EAAmB,UAACE,CAAD;AAAA,eAAiB;AAAE,eAAK,MAAP;AAAe,eAAK;AAApB,SAAD,CAA4DA,CAA5D,CAAhB;AAAA,OAAnB,CAAP;AACD,KAFY,CAAb;AAGD;;AACD,SAAO,IAAP;AACD","sourcesContent":["import { NodeType, MarkdownAbstractSyntaxTree } from 'react-markdown';\n\nexport default function allowNode(node: any, index: number, parent: NodeType) {\n  const nodeany: MarkdownAbstractSyntaxTree = node;\n  if (nodeany.type === 'html') {\n    // filter style\n    node.value = node.value.replace(/<((style|script|link|input|form)|\\/(style|script|link|input|form))(\\s?[^>]*>)/gi, (a: string) => {\n      return a.replace(/[<>]/g, (e: string) => (({ '<': '&lt;', '>': '&gt;' } as { [key: string]: string })[e]))\n    });\n  }\n  return true;\n}\n"]}