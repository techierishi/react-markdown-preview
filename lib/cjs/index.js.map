{"version":3,"sources":["../../src/index.tsx"],"names":["JsxParser","require","TestComp","props","PieChart","MarkdownPreview","mdp","React","createRef","loadedLang","components","renderers","code","language","value","console","log","state","source","highlight","nextProps","setState","nextState","mdStr","current","codes","getElementsByTagName","tag","parentNode","tagName","test","className","trim","lang","replace","includes","push","Prism","highlightElement","style","onScroll","onMouseOver","other","cls","allowNode","Component","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-markup';\nimport ReactMarkdown, { ReactMarkdownProps } from 'react-markdown';\nimport allowNode from './allowNode';\nimport { loadLang } from './langs';\nimport SynHi from './SynHi'\nimport './styles/markdown.less';\nimport './styles/markdowncolor.less';\nimport styled from 'styled-components'\n\nconst JsxParser =  require('react-jsx-parser');\n\nexport type {\n  ReactMarkdownProps,\n  MarkdownAbstractSyntaxTree,\n  NodeType,\n  RemarkParseOptions,\n  Position,\n  Point,\n  AlignType,\n  ReferenceType,\n  LinkTargetResolver,\n  Renderers,\n} from 'react-markdown';\n\n\n\n\nexport interface IMarkdownPreviewProps extends Omit<ReactMarkdownProps, 'className'> {\n  prefixCls?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  onScroll?: (e: React.UIEvent<HTMLDivElement>) => void;\n  onMouseOver?: (e: React.MouseEvent<HTMLDivElement>) => void;\n}\n\nexport interface IMarkdownPreviewState {\n  value?: string;\n}\n\nexport function TestComp(props: any) {\n\n  return (<div>Test Comp <button>Submit</button>\n  </div>)\n}\n\n\nconst PieChart = styled(TestComp)`\n  width: 100px;\n  height: 100px;\n`\n\n\nexport default class MarkdownPreview extends Component<IMarkdownPreviewProps, IMarkdownPreviewState> {\n  public mdp = React.createRef<HTMLDivElement>();\n  public loadedLang: string[] = ['markup'];\n  public static defaultProps: IMarkdownPreviewProps = {\n    renderers: {},\n  }\n  public constructor(props: IMarkdownPreviewProps) {\n    super(props);\n    this.state = {\n      value: '' || props.source,\n    };\n  }\n  componentDidMount() {\n    this.highlight();\n  }\n  UNSAFE_componentWillReceiveProps(nextProps: IMarkdownPreviewProps) {\n    if (nextProps.source !== this.props.source) {\n      this.setState({ value: nextProps.source }, () => {\n        this.highlight();\n      });\n    }\n  }\n  public shouldComponentUpdate(nextProps: IMarkdownPreviewProps, nextState: IMarkdownPreviewState) {\n    return nextProps.source !== this.props.source\n      || nextState.value !== this.state.value;\n  }\n  public renderHTML(mdStr?: string) {\n    this.setState({ value: mdStr }, () => {\n      this.highlight();\n    });\n  }\n  public async highlight() {\n    if (!this.mdp.current) return;\n    const codes = this.mdp.current.getElementsByTagName('code') as unknown as HTMLElement[];\n    for (const value of codes) {\n      const tag = value.parentNode as HTMLElement;\n      if (tag && tag.tagName === 'PRE' && /^language-/.test(value.className.trim())) {\n        const lang = value.className.trim().replace(/^language-/, '');\n        try {\n          if (!this.loadedLang.includes(lang as never)) {\n            this.loadedLang.push(lang);\n            await loadLang(lang);\n          }\n          await Prism.highlightElement(value);\n        } catch (error) { }\n      }\n    }\n  }\n\n   components = {\n    PieChart\n  }\n\n  renderers = {\n    code: ({ language, value }: { language: any, value: any }) => {\n      console.log(\"encdec\", language, value);\n\n      if(language && value){\n        if (language === 'encdec') {\n          return <div className=\"encDecWrapper\"> <span>{value}</span> <span><button>Save</button></span></div>\n        }\n      }\n      \n\n      return (language && value) ? <SynHi language={language}>{value}</SynHi> : <span />\n    }\n  }\n\n\n  render() {\n    const { className, style, onScroll, onMouseOver, ...other } = this.props;\n    const cls = classnames(className, 'wmde-markdown', 'wmde-markdown-color');\n    return (\n      <div ref={this.mdp} onScroll={onScroll} style={style} onMouseOver={onMouseOver} className={cls} >\n        <ReactMarkdown escapeHtml={false} allowNode={allowNode} {...other} source={this.state.value} renderers={this.renderers as any} />\n      </div>\n    );\n  }\n}"]}