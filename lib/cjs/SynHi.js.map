{"version":3,"sources":["../../src/SynHi.js"],"names":["Pre","styled","pre","LineNo","span","SynHi","children","language","defaultProps","theme","className","style","tokens","getLineProps","getTokenProps","map","line","i","key","token"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,GAAG,GAAGC,0BAAOC,GAAV,mBAAT;;AAUA,IAAMC,MAAM,GAAGF,0BAAOG,IAAV,oBAAZ;;AAOA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,QAAb,QAAaA,QAAb;AAAA,sBACZ,6BAAC,2BAAD,6BAAeC,gCAAf;AAA6B,IAAA,KAAK,EAAEC,iBAApC;AAA2C,IAAA,IAAI,EAAEH,QAAjD;AAA2D,IAAA,QAAQ,EAAEC;AAArE,MACG;AAAA,QAAGG,SAAH,SAAGA,SAAH;AAAA,QAAcC,KAAd,SAAcA,KAAd;AAAA,QAAqBC,MAArB,SAAqBA,MAArB;AAAA,QAA6BC,YAA7B,SAA6BA,YAA7B;AAAA,QAA2CC,aAA3C,SAA2CA,aAA3C;AAAA,wBACC,6BAAC,GAAD;AAAK,MAAA,SAAS,EAAEJ,SAAhB;AAA2B,MAAA,KAAK,EAAEC;AAAlC,OACGC,MAAM,CAACG,GAAP,CAAW,UAACC,IAAD,EAAOC,CAAP;AAAA,0BACV,oCAASJ,YAAY,CAAC;AAAEG,QAAAA,IAAI,EAAJA,IAAF;AAAQE,QAAAA,GAAG,EAAED;AAAb,OAAD,CAArB,eACE,6BAAC,MAAD,QAASA,CAAC,GAAG,CAAb,CADF,EAEGD,IAAI,CAACD,GAAL,CAAS,UAACI,KAAD,EAAQD,GAAR;AAAA,4BAAgB,qCAAUJ,aAAa,CAAC;AAAEK,UAAAA,KAAK,EAALA,KAAF;AAASD,UAAAA,GAAG,EAAHA;AAAT,SAAD,CAAvB,CAAhB;AAAA,OAAT,CAFH,CADU;AAAA,KAAX,CADH,CADD;AAAA,GADH,CADY;AAAA,CAAd;;eAeeb,K","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport Highlight, { defaultProps } from 'prism-react-renderer'\nimport theme from 'prism-react-renderer/themes/nightOwl'\n\nconst Pre = styled.pre`\n  text-align: left;\n  margin: 1em 0;\n  padding: 0.5em;\n  & .token-line {\n    line-height: 1.3em;\n    height: 1.3em;\n  }\n`\n\nconst LineNo = styled.span`\n  display: inline-block;\n  width: 2em;\n  user-select: none;\n  opacity: 0.8;\n`\n\nconst SynHi = ({ children, language }) => (\n  <Highlight {...defaultProps} theme={theme} code={children} language={language}>\n    {({ className, style, tokens, getLineProps, getTokenProps }) => (\n      <Pre className={className} style={style}>\n        {tokens.map((line, i) => (\n          <div {...getLineProps({ line, key: i })}>\n            <LineNo>{i + 1}</LineNo>\n            {line.map((token, key) => <span {...getTokenProps({ token, key })} />)}\n          </div>\n        ))}\n      </Pre>\n    )}\n  </Highlight>\n)\n\nexport default SynHi"]}